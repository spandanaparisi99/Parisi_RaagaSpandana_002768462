/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import business.Employee;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public class SearchPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchPanel
     */
    ArrayList<Employee> employeeList;
    
    public SearchPanel(ArrayList employeeList) {
        initComponents();
        this.employeeList = employeeList;
        addRowToJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        searchBy_lbl = new javax.swing.JLabel();
        searchByComboBox = new javax.swing.JComboBox<>();
        searchBy_textField = new javax.swing.JTextField();
        searchByButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Search for Employee");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Cell Phone No.", "Email", "Photo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        searchBy_lbl.setText("Search By:");

        searchByComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Phone Number", "Email " }));
        searchByComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByComboBoxActionPerformed(evt);
            }
        });

        searchByButton.setText("Search");
        searchByButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchBy_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBy_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchByButton)
                .addGap(132, 132, 132))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBy_lbl)
                    .addComponent(searchByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBy_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByButton))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchByComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByComboBoxActionPerformed
        // TODO add your handling code here:
        String x = String.valueOf(searchByComboBox.getSelectedItem()); 
        
        if("Name".equals(x)){
            String y = searchBy_textField.getText();
            
            
        }
    }//GEN-LAST:event_searchByComboBoxActionPerformed

    private void searchByButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByButtonActionPerformed
        // TODO add your handling code here:
        String y = searchBy_textField.getText();
        addSearchedRowToJTable(y);
    }//GEN-LAST:event_searchByButtonActionPerformed

public void addRowToJTable()
    {
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); 
        
        for(int i = 0; i < employeeList.size(); i++)
        {
            Object rowData[] = new Object[11];
            rowData[0] = employeeList.get(i).getName();
            rowData[1] = employeeList.get(i).getEmployee_ID();
            rowData[2] = employeeList.get(i).getAge();
            rowData[3] = employeeList.get(i).getGender();
            rowData[4] = employeeList.get(i).getStart_Date();
            rowData[5] = employeeList.get(i).getLevel();
            rowData[6] = employeeList.get(i).getTeam_info();
            rowData[7] = employeeList.get(i).getPosition_Title();
            rowData[8] = employeeList.get(i).getCellPhoneNumber();
            rowData[9] = employeeList.get(i).getEmailAddr();
            rowData[10] = employeeList.get(i).getImageFilePath();
            model.addRow(rowData);
        }
                
    }


    private TableModel model;
    private TableRowSorter sorter;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton searchByButton;
    private javax.swing.JComboBox<String> searchByComboBox;
    private javax.swing.JLabel searchBy_lbl;
    private javax.swing.JTextField searchBy_textField;
    // End of variables declaration//GEN-END:variables

    private void addSearchedRowToJTable(String y) {
        
        ArrayList<Employee> empList = new ArrayList<Employee>();
        
       for(Employee e: employeeList){
           if(e.getName().equals(y)){
               empList.add(e);
           }
       }
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); 
        
        for(int i = 0; i < empList.size(); i++)
        {
            Object rowData[] = new Object[11];
            rowData[0] = empList.get(i).getName();
            rowData[1] = empList.get(i).getEmployee_ID();
            rowData[2] = empList.get(i).getAge();
            rowData[3] = empList.get(i).getGender();
            rowData[4] = empList.get(i).getStart_Date();
            rowData[5] = empList.get(i).getLevel();
            rowData[6] = empList.get(i).getTeam_info();
            rowData[7] = empList.get(i).getPosition_Title();
            rowData[8] = empList.get(i).getCellPhoneNumber();
            rowData[9] = empList.get(i).getEmailAddr();
            rowData[10] = empList.get(i).getImageFilePath();
            model.addRow(rowData);
        }
    }
}
